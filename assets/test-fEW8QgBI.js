const f=Vue.defineComponent({__name:"test",setup(s){Vue.ref(9),Vue.ref(9);let e=Vue.ref(0),u=Vue.ref(10);const a=()=>{e.value+=1},c=()=>{u.value+=1},t=Vue.effectScope();t.run(()=>{console.log(">>>>>>>>>"),Vue.watch(refVal,(o,l,n)=>{console.log(11111,o)}),Vue.watch(refVal1,(o,l,n)=>{console.log(22222,o)})});const r=()=>t.stop();return(o,l)=>{const n=Vue.resolveComponent("el-input");return Vue.openBlock(),Vue.createElementBlock(Vue.Fragment,null,[Vue.createElementVNode("button",{onClick:a},"+1"),Vue.createElementVNode("button",{onClick:c},"+1"),Vue.createElementVNode("button",{onClick:r},"doFn"),Vue.createElementVNode("h2",null,Vue.toDisplayString(Vue.unref(e))+"=="+Vue.toDisplayString(Vue.unref(u)),1),Vue.createVNode(n,{type:"number",modelValue:Vue.unref(e),"onUpdate:modelValue":l[0]||(l[0]=V=>Vue.isRef(e)?e.value=V:e=V)},null,8,["modelValue"])],64)}}});export{f as default};
